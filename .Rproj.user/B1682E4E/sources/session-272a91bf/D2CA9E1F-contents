---
title: "Model"
format: 
  html: 
    code-fold: true
---

```{python}
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression

from sklearn import preprocessing
```

Get Data

```{python}
df = penguins.load_penguins().dropna()

df.head(3)
```

Define Model and Fit

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

Get some information

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
```

```{python}
import pins
from vetiver import vetiver_pin_write
b = pins.board_folder('data/model', allow_pickle_read=True)
vetiver_pin_write(b, v)
```

```{python}
#from joblib import dump, load

# Assume `model` is your trained model
#model_directory = 'C:/Users/C25Karis.Desotell/OneDrive - afacademy.af.edu/Documents/Spring 2024/Math 378/Actual Final Project'
#model_filename = 'penguin_model.joblib'

# Save the model
#dump(model, f'{model_directory}/{model_filename}')
```

```{python}
# Load the model
model = load(f'{model_directory}/{model_filename}')
```

```{python}

# Generate a FastAPI app from the vetiver model
from vetiver import VetiverAPI

app = VetiverAPI(v, check_prototype=True)

# Run the API server
# Note: FastAPI's typical run command differs; assuming vetiver provides a simplified method:
#app.run(port=8080)
```

Can be accessed through "http://localhost:8080"

```{python}
#import vetiver
#vetiver_prepare_docker(penguin_model, "penguins")
```
